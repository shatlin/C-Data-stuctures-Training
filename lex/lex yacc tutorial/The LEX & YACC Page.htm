<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0034)http://dinosaur.compilertools.net/ -->
<HTML><HEAD><TITLE>The LEX & YACC Page</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1256">
<META 
content="lex, yacc, flex, bison,&#10;compiler, tools, parser generator, scanner generator,&#10;manual, documentation, tutorial, download" 
name=keywords>
<META content="Lex, Yacc, Flex, Bison: Overview, Documentation, Tools, Pointers" 
name=description>
<META content="MSHTML 6.00.2800.1106" name=GENERATOR></HEAD>
<BODY bgColor=white>
<TABLE>
  <TBODY>
  <TR>
    <TD><BR>
      <H1><FONT size=8><FONT color=#cccccc>The</FONT> <FONT color=#f7de9c>Lex 
      &amp; Yacc</FONT> <FONT color=#cccccc>Page</FONT> </FONT></H1></TD></TR>
  <TR>
    <TD align=right><I>The asteroid to kill this dinosaur is still in 
      orbit.</I><BR><I>- Lex Manual Page</I> <BR><BR></TD></TR><!-- CONTENTS ----------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black>ON THIS PAGE 
    </FONT></TD></TR>
  <TR>
    <TD><A href="http://dinosaur.compilertools.net/#overview">Overview</A> | 
      <A href="http://dinosaur.compilertools.net/#lex">Lex</A> | <A 
      href="http://dinosaur.compilertools.net/#yacc">Yacc</A> | <A 
      href="http://dinosaur.compilertools.net/#flex">Flex</A> | <A 
      href="http://dinosaur.compilertools.net/#bison">Bison</A> | <A 
      href="http://dinosaur.compilertools.net/#tools">Tools</A> | <A 
      href="http://dinosaur.compilertools.net/#books">Books</A> <BR><BR></TD></TR><!-- OVERIVIEW ---------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A 
      name=overview>OVERVIEW</A> </FONT></TD></TR>
  <TR>
    <TD>A compiler or interptreter for a programminning language is often 
      decomposed into two parts: 
      <OL type=1>
        <LI>Read the source program and discover its structure. 
        <LI>Process this structure, e.g. to generate the target program. 
      </LI></OL><I>Lex</I> and <I>Yacc</I> can generate program fragments that 
      solve the first task. 
      <P>The task of discovering the source structure again is decomposed into 
      subtasks: 
      <OL type=1>
        <LI>Split the source file into tokens (<I>Lex</I>). 
        <LI>Find the hierarchical structure of the program (<I>Yacc</I>). 
      </LI></OL>
      <P>
      <UL>
        <LI><A href="http://memphis.compilertools.net/interpreter.html">A First 
        Example: A Simple Interpreter</A> <BR><BR></LI></UL></TD></TR><!-- LEX ---------------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A name=lex>LEX</A> 
      </FONT></TD></TR>
  <TR>
    <TD>
      <H2>Lex - A Lexical Analyzer Generator</H2><I>M. E. Lesk and E. 
      Schmidt</I> 
      <P>Lex helps write programs whose control flow is directed by instances of 
      regular expressions in the input stream. It is well suited for 
      editor-script type transformations and for segmenting input in preparation 
      for a parsing routine. 
      <P>Lex source is a table of regular expressions and corresponding program 
      fragments. The table is translated to a program which reads an input 
      stream, copying it to an output stream and partitioning the input into 
      strings which match the given expressions. As each such string is 
      recognized the corresponding program fragment is executed. The recognition 
      of the expressions is performed by a deterministic finite automaton 
      generated by Lex. The program fragments written by the user are executed 
      in the order in which the corresponding regular expressions occur in the 
      input stream. 
      <P>
      <UL>
        <LI><A href="http://dinosaur.compilertools.net/lex/index.html">Online 
        Manual</A> 
        <LI><A 
        href="http://dinosaur.compilertools.net/lex/lex.ps">PostScript</A> 
        <LI><A href="http://plan9.bell-labs.com/magic/man2html/1/lex">Lex Manual 
        Page</A> </LI></UL><BR></TD></TR><!-- YACC --------------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A name=yacc>YACC</A> 
      </FONT></TD></TR>
  <TR>
    <TD>
      <H2>Yacc: Yet Another Compiler-Compiler</H2><I>Stephen C. Johnson</I> 
      <P>Computer program input generally has some structure; in fact, every 
      computer program that does input can be thought of as defining an ``input 
      language'' which it accepts. An input language may be as complex as a 
      programming language, or as simple as a sequence of numbers. 
      Unfortunately, usual input facilities are limited, difficult to use, and 
      often are lax about checking their inputs for validity. 
      <P>Yacc provides a general tool for describing the input to a computer 
      program. The Yacc user specifies the structures of his input, together 
      with code to be invoked as each such structure is recognized. Yacc turns 
      such a specification into a subroutine that han- dles the input process; 
      frequently, it is convenient and appropriate to have most of the flow of 
      control in the user's application handled by this subroutine. 
      <P>
      <UL>
        <LI><A href="http://dinosaur.compilertools.net/yacc/index.html">Online 
        Manual</A> 
        <LI><A 
        href="http://dinosaur.compilertools.net/yacc/yacc.ps">PostScript</A> 
        <LI><A href="http://plan9.bell-labs.com/magic/man2html/1/yacc">Yacc 
        Manual Page</A> </LI></UL><BR></TD></TR><!-- FLEX --------------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A name=flex>FLEX</A> 
      </FONT></TD></TR>
  <TR>
    <TD>
      <H2>Flex, A fast scanner generator</H2><I>Vern Paxson</I> 
      <P>flex is a tool for generating scanners: programs which recognized 
      lexical patterns in text. flex reads the given input files, or its 
      standard input if no file names are given, for a description of a scanner 
      to generate. The description is in the form of pairs of regular 
      expressions and C code, called rules. flex generates as output a C source 
      file, `lex.yy.c', which defines a routine `yylex()'. This file is compiled 
      and linked with the `-lfl' library to produce an executable. When the 
      executable is run, it analyzes its input for occurrences of the regular 
      expressions. Whenever it finds one, it executes the corresponding C code. 
      <P>
      <UL>
        <LI><A href="http://dinosaur.compilertools.net/flex/index.html">Online 
        Manual</A> 
        <LI><A 
        href="http://dinosaur.compilertools.net/flex/flex.ps">PostScript</A> 
        <LI><A href="http://dinosaur.compilertools.net/flex/manpage.html">Flex 
        Manual Page</A> 
        <LI><A href="ftp://prep.ai.mit.edu/pub/gnu/">Download Flex from 
        ftp://prep.ai.mit.edu/pub/gnu/</A> </LI></UL><BR></TD></TR><!-- BISON -------------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A 
      name=bison>BISON</A> </FONT></TD></TR>
  <TR>
    <TD>
      <H2>Bison, The YACC-compatible Parser Generator</H2><I>Charles Donnelly 
      and Richard Stallman</I> 
      <P>Bison is a general-purpose parser generator that converts a grammar 
      description for an LALR(1) context-free grammar into a C program to parse 
      that grammar. Once you are proficient with Bison, you may use it to 
      develop a wide range of language parsers, from those used in simple desk 
      calculators to complex programming languages. 
      <P>Bison is upward compatible with Yacc: all properly-written Yacc 
      grammars ought to work with Bison with no change. Anyone familiar with 
      Yacc should be able to use Bison with little trouble. 
      <P>
      <UL>
        <LI><A href="http://dinosaur.compilertools.net/bison/index.html">Online 
        Manual</A> 
        <LI><A 
        href="http://dinosaur.compilertools.net/bison/bison.ps">PostScript</A> 
        <LI><A href="http://dinosaur.compilertools.net/bison/manpage.html">Bison 
        Manual Page</A> 
        <LI><A href="ftp://prep.ai.mit.edu/pub/gnu/">Download Bison from 
        ftp://prep.ai.mit.edu/pub/gnu/</A> </LI></UL><BR></TD></TR><!-- TOOLS -------------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A 
      name=tools>TOOLS</A> </FONT></TD></TR>
  <TR>
    <TD><BR>Other tools for compiler writers: 
      <UL>
        <LI><A href="http://catalog.compilertools.net/kits.html">Compiler 
        Construction Kits</A> 
        <LI><A href="http://catalog.compilertools.net/lexparse.html">Lexer and 
        Parser Generators</A> 
        <LI><A href="http://catalog.compilertools.net/attribute.html">Attribute 
        Grammar Systems</A> 
        <LI><A href="http://catalog.compilertools.net/trafo.html">Transformation 
        Tools</A> 
        <LI><A href="http://catalog.compilertools.net/backend.html">Backend 
        Generators</A> 
        <LI><A href="http://catalog.compilertools.net/optim.html">Program 
        Analysis and Optimisation</A> 
        <LI><A href="http://catalog.compilertools.net/env.html">Environment 
        Generators</A> 
        <LI><A 
        href="http://catalog.compilertools.net/infra.html">Infrastructure, 
        Components, Tools</A> 
        <LI><A href="http://catalog.compilertools.net/java.html">Compiler 
        Construction with Java</A> </LI></UL><BR></TD></TR><!-- BOOKS -------------------------------------------------------------------->
  <TR>
    <TD bgColor=#f7de9c><FONT face=helvetica color=black><A 
      name=books>BOOKS</A> </FONT></TD></TR>
  <TR>
    <TD>
      <TABLE><!-- books -->
        <TBODY>
        <TR>
          <TD><IMG alt=birds src="The LEX &amp; YACC Page_files/birds.gif" 
            width=100> </TD>
          <TD vAlign=top><A 
            href="http://www.ora.com/catalog/lex/index.html">Lex &amp; 
            Yacc</A><BR>John R. Levine, Tony Mason, Doug Brown <BR>Paperback - 
            366 pages 2nd/updated edition (October 1992)<BR>O'Reilly &amp; 
            Associates<BR>ISBN: 1565920007 </TD></TR>
        <TR>
          <TD><IMG alt=dragon src="The LEX &amp; YACC Page_files/dragon.gif" 
            width=100> </TD>
          <TD vAlign=top><A 
            href="http://www1.fatbrain.com/asp/bookinfo/bookinfo.asp?theisbn=0201100886&amp;vm=c">Compilers: 
            Principles, Techniques, and Tools</A><BR>Alfred V. Aho, Ravi Sethi, 
            Jeffrey D. Ullman<BR>Addison-Wesley Pub Co<BR>ISBN: 0201100886 
</TD></TR>
        <TR>
          <TD><IMG alt=tiger src="The LEX &amp; YACC Page_files/tiger.gif" 
            width=100> </TD>
          <TD vAlign=top><A 
            href="http://www.cs.princeton.edu/~appel/modern/c/index.html">Modern 
            Compiler Implementation in C</A><BR>Andrew W. Appel, Maia 
            Ginsburg<BR>Hardcover - 560 pages Rev expand edition (January 
            1998)<BR>Cambridge University Press<BR>ISBN: 
        052158390X<BR></TD></TR></TBODY></TABLE><!-- books --></TD></TR><!-----------------------------------------------------------------------------></TBODY></TABLE></BODY></HTML>
